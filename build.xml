<?xml version="1.0" encoding="UTF-8"?>
<project name="test cukes" default="deps" xmlns:ivy="antlib:org.apache.ivy.ant">
	<description>getti Importer</description>

	<property name="src" location="src" />
	<property name="ivy.jar.dir" value="lib/ivy" />
	<property name="lib.dir.test" location="lib/test" />
	<property name="lib.dir.compile" location="WebContent/WEB-INF/lib" />
	
	<property name="ivy.install.version" value="2.3.0" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<target name="deps" depends="install-ivy">
		<ivy:resolve />
		<ivy:retrieve pattern="${lib.dir.compile}/[artifact].[ext]" conf="compile"/>
		<ivy:retrieve pattern="${lib.dir.test}/[artifact].[ext]" conf="test"/>
	</target>

	<target name="clean">
		<delete dir="${lib.dir.test}" />
		<delete dir="${ivy.jar.dir}" />
		<delete dir="${lib.dir.compile}" />
	</target>

	<target name="download-ivy" unless="skip.download">
		<mkdir dir="${ivy.jar.dir}" />
		<echo message="installing ivy..." />
		<get
			src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
			dest="${ivy.jar.file}" usetimestamp="true" />
	</target>

	<target name="install-ivy" depends="download-ivy" description="--> install ivy">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>

	<target name="clean-ivy" description="--> clean the ivy installation">
		<delete dir="${ivy.jar.dir}" />
	</target>

	<target name="clean-cache" depends="install-ivy" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>
	
	
    <property name="jars" value="lib/test"/>
	
	<target name="classpath">
	        <path id="classpath">
	            <fileset dir="${jars}">
	                <include name="**/*.jar"/>
	            </fileset>
	            <pathelement location="target/classes"/>
	            <pathelement location="target/test-classes"/>
	        </path>
	    </target>

	    <target name="compile" depends="classpath">
	        <mkdir dir="target/classes"/>
	        <javac srcdir="src" destdir="target/classes" classpathref="classpath" includeantruntime="false"/>
	    </target>

	    <target name="compile-test" depends="compile,classpath">
	        <mkdir dir="target/test-classes"/>
	        <javac srcdir="test" destdir="target/test-classes" classpathref="classpath" includeantruntime="false"/>
	    </target>

	    <target name="runcukes" depends="compile-test">
	        <mkdir dir="target/cucumber-junit-report"/>
	        <java classname="cucumber.api.cli.Main" fork="true" failonerror="false" resultproperty="cucumber.exitstatus">
	            <classpath refid="classpath"/>
	            <arg value="--format"/>
	            <arg value="junit:target/cucumber-junit-report.xml"/>
	            <arg value="--format"/>
	            <arg value="pretty"/>
	            <arg value="--format"/>
	            <arg value="html:target/cucumber-html-report"/>
	            <arg value="--glue"/>
	            <arg value="test.cukes"/>
	            <arg value="test/resources"/>
	        </java>

	        <junitreport todir="target/cucumber-junit-report">
	            <fileset dir="target">
	                <include name="cucumber-junit-report.xml"/>
	            </fileset>
	            <report format="frames" todir="target/cucumber-junit-report"/>
	        </junitreport>

	        <fail message="Cucumber failed">
	            <condition>
	                <not>
	                    <equals arg1="${cucumber.exitstatus}" arg2="0"/>
	                </not>
	            </condition>
	        </fail>
	    </target>

</project>